// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/api/store.proto

package ipb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	pb "open-match.dev/open-match/pkg/pb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FirehoseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirehoseRequest) Reset()         { *m = FirehoseRequest{} }
func (m *FirehoseRequest) String() string { return proto.CompactTextString(m) }
func (*FirehoseRequest) ProtoMessage()    {}
func (*FirehoseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{0}
}

func (m *FirehoseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirehoseRequest.Unmarshal(m, b)
}
func (m *FirehoseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirehoseRequest.Marshal(b, m, deterministic)
}
func (m *FirehoseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirehoseRequest.Merge(m, src)
}
func (m *FirehoseRequest) XXX_Size() int {
	return xxx_messageInfo_FirehoseRequest.Size(m)
}
func (m *FirehoseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FirehoseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FirehoseRequest proto.InternalMessageInfo

type FirehoseResponse struct {
	// 0 means no watermark
	Watermark uint64 `protobuf:"varint,1,opt,name=watermark,proto3" json:"watermark,omitempty"`
	// Types that are valid to be assigned to Update:
	//	*FirehoseResponse_NewTicket
	//	*FirehoseResponse_RelistedId
	//	*FirehoseResponse_PendingId
	//	*FirehoseResponse_AssignedId
	//	*FirehoseResponse_DeletedId
	Update               isFirehoseResponse_Update `protobuf_oneof:"update"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FirehoseResponse) Reset()         { *m = FirehoseResponse{} }
func (m *FirehoseResponse) String() string { return proto.CompactTextString(m) }
func (*FirehoseResponse) ProtoMessage()    {}
func (*FirehoseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{1}
}

func (m *FirehoseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirehoseResponse.Unmarshal(m, b)
}
func (m *FirehoseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirehoseResponse.Marshal(b, m, deterministic)
}
func (m *FirehoseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirehoseResponse.Merge(m, src)
}
func (m *FirehoseResponse) XXX_Size() int {
	return xxx_messageInfo_FirehoseResponse.Size(m)
}
func (m *FirehoseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FirehoseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FirehoseResponse proto.InternalMessageInfo

func (m *FirehoseResponse) GetWatermark() uint64 {
	if m != nil {
		return m.Watermark
	}
	return 0
}

type isFirehoseResponse_Update interface {
	isFirehoseResponse_Update()
}

type FirehoseResponse_NewTicket struct {
	NewTicket *pb.Ticket `protobuf:"bytes,3,opt,name=new_ticket,json=newTicket,proto3,oneof"`
}

type FirehoseResponse_RelistedId struct {
	RelistedId string `protobuf:"bytes,4,opt,name=relisted_id,json=relistedId,proto3,oneof"`
}

type FirehoseResponse_PendingId struct {
	PendingId string `protobuf:"bytes,5,opt,name=pending_id,json=pendingId,proto3,oneof"`
}

type FirehoseResponse_AssignedId struct {
	AssignedId string `protobuf:"bytes,6,opt,name=assigned_id,json=assignedId,proto3,oneof"`
}

type FirehoseResponse_DeletedId struct {
	DeletedId string `protobuf:"bytes,7,opt,name=deleted_id,json=deletedId,proto3,oneof"`
}

func (*FirehoseResponse_NewTicket) isFirehoseResponse_Update() {}

func (*FirehoseResponse_RelistedId) isFirehoseResponse_Update() {}

func (*FirehoseResponse_PendingId) isFirehoseResponse_Update() {}

func (*FirehoseResponse_AssignedId) isFirehoseResponse_Update() {}

func (*FirehoseResponse_DeletedId) isFirehoseResponse_Update() {}

func (m *FirehoseResponse) GetUpdate() isFirehoseResponse_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *FirehoseResponse) GetNewTicket() *pb.Ticket {
	if x, ok := m.GetUpdate().(*FirehoseResponse_NewTicket); ok {
		return x.NewTicket
	}
	return nil
}

func (m *FirehoseResponse) GetRelistedId() string {
	if x, ok := m.GetUpdate().(*FirehoseResponse_RelistedId); ok {
		return x.RelistedId
	}
	return ""
}

func (m *FirehoseResponse) GetPendingId() string {
	if x, ok := m.GetUpdate().(*FirehoseResponse_PendingId); ok {
		return x.PendingId
	}
	return ""
}

func (m *FirehoseResponse) GetAssignedId() string {
	if x, ok := m.GetUpdate().(*FirehoseResponse_AssignedId); ok {
		return x.AssignedId
	}
	return ""
}

func (m *FirehoseResponse) GetDeletedId() string {
	if x, ok := m.GetUpdate().(*FirehoseResponse_DeletedId); ok {
		return x.DeletedId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FirehoseResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FirehoseResponse_NewTicket)(nil),
		(*FirehoseResponse_RelistedId)(nil),
		(*FirehoseResponse_PendingId)(nil),
		(*FirehoseResponse_AssignedId)(nil),
		(*FirehoseResponse_DeletedId)(nil),
	}
}

type CreateTicketRequest struct {
	Ticket               *pb.Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTicketRequest) Reset()         { *m = CreateTicketRequest{} }
func (m *CreateTicketRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTicketRequest) ProtoMessage()    {}
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{2}
}

func (m *CreateTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTicketRequest.Unmarshal(m, b)
}
func (m *CreateTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTicketRequest.Marshal(b, m, deterministic)
}
func (m *CreateTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTicketRequest.Merge(m, src)
}
func (m *CreateTicketRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTicketRequest.Size(m)
}
func (m *CreateTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTicketRequest proto.InternalMessageInfo

func (m *CreateTicketRequest) GetTicket() *pb.Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type CreateTicketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTicketResponse) Reset()         { *m = CreateTicketResponse{} }
func (m *CreateTicketResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTicketResponse) ProtoMessage()    {}
func (*CreateTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{3}
}

func (m *CreateTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTicketResponse.Unmarshal(m, b)
}
func (m *CreateTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTicketResponse.Marshal(b, m, deterministic)
}
func (m *CreateTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTicketResponse.Merge(m, src)
}
func (m *CreateTicketResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTicketResponse.Size(m)
}
func (m *CreateTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTicketResponse proto.InternalMessageInfo

type GetTicketRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTicketRequest) Reset()         { *m = GetTicketRequest{} }
func (m *GetTicketRequest) String() string { return proto.CompactTextString(m) }
func (*GetTicketRequest) ProtoMessage()    {}
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{4}
}

func (m *GetTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTicketRequest.Unmarshal(m, b)
}
func (m *GetTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTicketRequest.Marshal(b, m, deterministic)
}
func (m *GetTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTicketRequest.Merge(m, src)
}
func (m *GetTicketRequest) XXX_Size() int {
	return xxx_messageInfo_GetTicketRequest.Size(m)
}
func (m *GetTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTicketRequest proto.InternalMessageInfo

func (m *GetTicketRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTicketResponse struct {
	Ticket               *pb.Ticket     `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Assignment           *pb.Assignment `protobuf:"bytes,2,opt,name=assignment,proto3" json:"assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetTicketResponse) Reset()         { *m = GetTicketResponse{} }
func (m *GetTicketResponse) String() string { return proto.CompactTextString(m) }
func (*GetTicketResponse) ProtoMessage()    {}
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{5}
}

func (m *GetTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTicketResponse.Unmarshal(m, b)
}
func (m *GetTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTicketResponse.Marshal(b, m, deterministic)
}
func (m *GetTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTicketResponse.Merge(m, src)
}
func (m *GetTicketResponse) XXX_Size() int {
	return xxx_messageInfo_GetTicketResponse.Size(m)
}
func (m *GetTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTicketResponse proto.InternalMessageInfo

func (m *GetTicketResponse) GetTicket() *pb.Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *GetTicketResponse) GetAssignment() *pb.Assignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

type AssignTicketsRequest struct {
	Ids                  []string       `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Assignment           *pb.Assignment `protobuf:"bytes,2,opt,name=assignment,proto3" json:"assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AssignTicketsRequest) Reset()         { *m = AssignTicketsRequest{} }
func (m *AssignTicketsRequest) String() string { return proto.CompactTextString(m) }
func (*AssignTicketsRequest) ProtoMessage()    {}
func (*AssignTicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{6}
}

func (m *AssignTicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignTicketsRequest.Unmarshal(m, b)
}
func (m *AssignTicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignTicketsRequest.Marshal(b, m, deterministic)
}
func (m *AssignTicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignTicketsRequest.Merge(m, src)
}
func (m *AssignTicketsRequest) XXX_Size() int {
	return xxx_messageInfo_AssignTicketsRequest.Size(m)
}
func (m *AssignTicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignTicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignTicketsRequest proto.InternalMessageInfo

func (m *AssignTicketsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *AssignTicketsRequest) GetAssignment() *pb.Assignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

type AssignTicketsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignTicketsResponse) Reset()         { *m = AssignTicketsResponse{} }
func (m *AssignTicketsResponse) String() string { return proto.CompactTextString(m) }
func (*AssignTicketsResponse) ProtoMessage()    {}
func (*AssignTicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{7}
}

func (m *AssignTicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignTicketsResponse.Unmarshal(m, b)
}
func (m *AssignTicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignTicketsResponse.Marshal(b, m, deterministic)
}
func (m *AssignTicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignTicketsResponse.Merge(m, src)
}
func (m *AssignTicketsResponse) XXX_Size() int {
	return xxx_messageInfo_AssignTicketsResponse.Size(m)
}
func (m *AssignTicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignTicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignTicketsResponse proto.InternalMessageInfo

type ReleaseTicketsRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseTicketsRequest) Reset()         { *m = ReleaseTicketsRequest{} }
func (m *ReleaseTicketsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseTicketsRequest) ProtoMessage()    {}
func (*ReleaseTicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{8}
}

func (m *ReleaseTicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseTicketsRequest.Unmarshal(m, b)
}
func (m *ReleaseTicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseTicketsRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseTicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseTicketsRequest.Merge(m, src)
}
func (m *ReleaseTicketsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseTicketsRequest.Size(m)
}
func (m *ReleaseTicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseTicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseTicketsRequest proto.InternalMessageInfo

func (m *ReleaseTicketsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ReleaseTicketsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseTicketsResponse) Reset()         { *m = ReleaseTicketsResponse{} }
func (m *ReleaseTicketsResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseTicketsResponse) ProtoMessage()    {}
func (*ReleaseTicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{9}
}

func (m *ReleaseTicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseTicketsResponse.Unmarshal(m, b)
}
func (m *ReleaseTicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseTicketsResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseTicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseTicketsResponse.Merge(m, src)
}
func (m *ReleaseTicketsResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseTicketsResponse.Size(m)
}
func (m *ReleaseTicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseTicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseTicketsResponse proto.InternalMessageInfo

type MarkPendingRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkPendingRequest) Reset()         { *m = MarkPendingRequest{} }
func (m *MarkPendingRequest) String() string { return proto.CompactTextString(m) }
func (*MarkPendingRequest) ProtoMessage()    {}
func (*MarkPendingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{10}
}

func (m *MarkPendingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkPendingRequest.Unmarshal(m, b)
}
func (m *MarkPendingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkPendingRequest.Marshal(b, m, deterministic)
}
func (m *MarkPendingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkPendingRequest.Merge(m, src)
}
func (m *MarkPendingRequest) XXX_Size() int {
	return xxx_messageInfo_MarkPendingRequest.Size(m)
}
func (m *MarkPendingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkPendingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkPendingRequest proto.InternalMessageInfo

func (m *MarkPendingRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type MarkPendingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkPendingResponse) Reset()         { *m = MarkPendingResponse{} }
func (m *MarkPendingResponse) String() string { return proto.CompactTextString(m) }
func (*MarkPendingResponse) ProtoMessage()    {}
func (*MarkPendingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{11}
}

func (m *MarkPendingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkPendingResponse.Unmarshal(m, b)
}
func (m *MarkPendingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkPendingResponse.Marshal(b, m, deterministic)
}
func (m *MarkPendingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkPendingResponse.Merge(m, src)
}
func (m *MarkPendingResponse) XXX_Size() int {
	return xxx_messageInfo_MarkPendingResponse.Size(m)
}
func (m *MarkPendingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkPendingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarkPendingResponse proto.InternalMessageInfo

type GetCurrentWatermarkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentWatermarkRequest) Reset()         { *m = GetCurrentWatermarkRequest{} }
func (m *GetCurrentWatermarkRequest) String() string { return proto.CompactTextString(m) }
func (*GetCurrentWatermarkRequest) ProtoMessage()    {}
func (*GetCurrentWatermarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{12}
}

func (m *GetCurrentWatermarkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentWatermarkRequest.Unmarshal(m, b)
}
func (m *GetCurrentWatermarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentWatermarkRequest.Marshal(b, m, deterministic)
}
func (m *GetCurrentWatermarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentWatermarkRequest.Merge(m, src)
}
func (m *GetCurrentWatermarkRequest) XXX_Size() int {
	return xxx_messageInfo_GetCurrentWatermarkRequest.Size(m)
}
func (m *GetCurrentWatermarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentWatermarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentWatermarkRequest proto.InternalMessageInfo

type GetCurrentWatermarkResponse struct {
	Watermark            uint64   `protobuf:"varint,1,opt,name=watermark,proto3" json:"watermark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentWatermarkResponse) Reset()         { *m = GetCurrentWatermarkResponse{} }
func (m *GetCurrentWatermarkResponse) String() string { return proto.CompactTextString(m) }
func (*GetCurrentWatermarkResponse) ProtoMessage()    {}
func (*GetCurrentWatermarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{13}
}

func (m *GetCurrentWatermarkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentWatermarkResponse.Unmarshal(m, b)
}
func (m *GetCurrentWatermarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentWatermarkResponse.Marshal(b, m, deterministic)
}
func (m *GetCurrentWatermarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentWatermarkResponse.Merge(m, src)
}
func (m *GetCurrentWatermarkResponse) XXX_Size() int {
	return xxx_messageInfo_GetCurrentWatermarkResponse.Size(m)
}
func (m *GetCurrentWatermarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentWatermarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentWatermarkResponse proto.InternalMessageInfo

func (m *GetCurrentWatermarkResponse) GetWatermark() uint64 {
	if m != nil {
		return m.Watermark
	}
	return 0
}

type DeleteTicketRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTicketRequest) Reset()         { *m = DeleteTicketRequest{} }
func (m *DeleteTicketRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketRequest) ProtoMessage()    {}
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{14}
}

func (m *DeleteTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketRequest.Unmarshal(m, b)
}
func (m *DeleteTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketRequest.Merge(m, src)
}
func (m *DeleteTicketRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketRequest.Size(m)
}
func (m *DeleteTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketRequest proto.InternalMessageInfo

func (m *DeleteTicketRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteTicketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTicketResponse) Reset()         { *m = DeleteTicketResponse{} }
func (m *DeleteTicketResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketResponse) ProtoMessage()    {}
func (*DeleteTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30b5164f402c10d4, []int{15}
}

func (m *DeleteTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketResponse.Unmarshal(m, b)
}
func (m *DeleteTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketResponse.Merge(m, src)
}
func (m *DeleteTicketResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketResponse.Size(m)
}
func (m *DeleteTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FirehoseRequest)(nil), "openmatch.internal.FirehoseRequest")
	proto.RegisterType((*FirehoseResponse)(nil), "openmatch.internal.FirehoseResponse")
	proto.RegisterType((*CreateTicketRequest)(nil), "openmatch.internal.CreateTicketRequest")
	proto.RegisterType((*CreateTicketResponse)(nil), "openmatch.internal.CreateTicketResponse")
	proto.RegisterType((*GetTicketRequest)(nil), "openmatch.internal.GetTicketRequest")
	proto.RegisterType((*GetTicketResponse)(nil), "openmatch.internal.GetTicketResponse")
	proto.RegisterType((*AssignTicketsRequest)(nil), "openmatch.internal.AssignTicketsRequest")
	proto.RegisterType((*AssignTicketsResponse)(nil), "openmatch.internal.AssignTicketsResponse")
	proto.RegisterType((*ReleaseTicketsRequest)(nil), "openmatch.internal.ReleaseTicketsRequest")
	proto.RegisterType((*ReleaseTicketsResponse)(nil), "openmatch.internal.ReleaseTicketsResponse")
	proto.RegisterType((*MarkPendingRequest)(nil), "openmatch.internal.MarkPendingRequest")
	proto.RegisterType((*MarkPendingResponse)(nil), "openmatch.internal.MarkPendingResponse")
	proto.RegisterType((*GetCurrentWatermarkRequest)(nil), "openmatch.internal.GetCurrentWatermarkRequest")
	proto.RegisterType((*GetCurrentWatermarkResponse)(nil), "openmatch.internal.GetCurrentWatermarkResponse")
	proto.RegisterType((*DeleteTicketRequest)(nil), "openmatch.internal.DeleteTicketRequest")
	proto.RegisterType((*DeleteTicketResponse)(nil), "openmatch.internal.DeleteTicketResponse")
}

func init() { proto.RegisterFile("internal/api/store.proto", fileDescriptor_30b5164f402c10d4) }

var fileDescriptor_30b5164f402c10d4 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0xeb, 0xfe, 0xc9, 0x5b, 0x4f, 0xfb, 0x96, 0x76, 0xd3, 0x14, 0xcb, 0x54, 0x22, 0x18,
	0x9a, 0x3a, 0x48, 0x38, 0x28, 0x88, 0x13, 0x17, 0x68, 0x11, 0x6d, 0x0e, 0x48, 0xc8, 0x20, 0x15,
	0x71, 0x20, 0xda, 0x76, 0x47, 0xe9, 0x2a, 0x89, 0x6d, 0xbc, 0x9b, 0xe6, 0x23, 0xf1, 0x0d, 0x39,
	0x23, 0x67, 0xd7, 0x89, 0x9d, 0x6e, 0x9a, 0x88, 0x5b, 0x3c, 0xfb, 0xdb, 0x67, 0xc6, 0x93, 0xe7,
	0x91, 0xc1, 0xe1, 0x91, 0xc4, 0x34, 0xa2, 0x83, 0x16, 0x4d, 0x78, 0x4b, 0xc8, 0x38, 0xc5, 0x20,
	0x49, 0x63, 0x19, 0x13, 0x12, 0x27, 0x18, 0x0d, 0xa9, 0xbc, 0xb9, 0x0d, 0x72, 0xc6, 0x25, 0x19,
	0x34, 0x44, 0x21, 0x68, 0x0f, 0x85, 0xe2, 0xbc, 0x03, 0x78, 0xf4, 0x89, 0xa7, 0x78, 0x1b, 0x0b,
	0x0c, 0xf1, 0xd7, 0x08, 0x85, 0xf4, 0xfe, 0x58, 0xb0, 0x3f, 0xab, 0x89, 0x24, 0x8e, 0x04, 0x92,
	0x63, 0xb0, 0xc7, 0x54, 0x62, 0x3a, 0xa4, 0x69, 0xdf, 0xb1, 0xea, 0x96, 0xbf, 0x19, 0xce, 0x0a,
	0xa4, 0x0d, 0x10, 0xe1, 0xb8, 0x2b, 0xf9, 0x4d, 0x1f, 0xa5, 0xb3, 0x51, 0xb7, 0xfc, 0x9d, 0xf6,
	0x41, 0x30, 0x1b, 0xe1, 0xdb, 0xe4, 0xe0, 0x72, 0x2d, 0xb4, 0x23, 0x1c, 0xab, 0x07, 0xf2, 0x0c,
	0x76, 0x52, 0x1c, 0x70, 0x21, 0x91, 0x75, 0x39, 0x73, 0x36, 0xeb, 0x96, 0x6f, 0x5f, 0xae, 0x85,
	0x90, 0x17, 0x3b, 0x8c, 0x3c, 0x05, 0x48, 0x30, 0x62, 0x3c, 0xea, 0x65, 0xc4, 0x96, 0x26, 0x6c,
	0x5d, 0xeb, 0xb0, 0x4c, 0x83, 0x0a, 0xc1, 0x7b, 0x91, 0xd2, 0xa8, 0xe4, 0x1a, 0x79, 0x51, 0x69,
	0x30, 0x1c, 0xa0, 0xee, 0xf2, 0x5f, 0xae, 0xa1, 0x6b, 0x1d, 0x76, 0xb6, 0x0d, 0x95, 0x51, 0xc2,
	0xa8, 0x44, 0xef, 0x3d, 0x54, 0xcf, 0x53, 0xa4, 0x12, 0xd5, 0x84, 0x7a, 0x1f, 0xa4, 0x09, 0x15,
	0xfd, 0x62, 0xd6, 0x82, 0x17, 0x0b, 0x35, 0xe0, 0x1d, 0xc1, 0x61, 0x59, 0x41, 0x6d, 0xcf, 0xf3,
	0x60, 0xff, 0x02, 0x65, 0x59, 0x76, 0x0f, 0xd6, 0x39, 0x9b, 0x48, 0xda, 0xe1, 0x3a, 0x67, 0xde,
	0x08, 0x0e, 0x0a, 0x8c, 0x5e, 0xfb, 0xea, 0xbd, 0xc9, 0x5b, 0xd0, 0xaf, 0x3d, 0xc4, 0x48, 0x3a,
	0xeb, 0x13, 0xbc, 0x56, 0xc0, 0x3f, 0x4c, 0x0f, 0xc3, 0x02, 0xe8, 0x75, 0xe1, 0x50, 0x9d, 0x28,
	0x39, 0x91, 0x8f, 0xb7, 0x0f, 0x1b, 0x9c, 0x09, 0xc7, 0xaa, 0x6f, 0xf8, 0x76, 0x98, 0xfd, 0xfc,
	0xd7, 0x06, 0x8f, 0xa1, 0x36, 0xd7, 0x40, 0x2f, 0xa5, 0x09, 0xb5, 0x10, 0x07, 0x48, 0x05, 0x2e,
	0x6b, 0xed, 0x39, 0x70, 0x34, 0x8f, 0x6a, 0x91, 0x06, 0x90, 0xcf, 0x34, 0xed, 0x7f, 0x51, 0x96,
	0x58, 0xac, 0x50, 0x83, 0x6a, 0x89, 0xd3, 0xd7, 0x8f, 0xc1, 0xbd, 0x40, 0x79, 0x3e, 0x4a, 0x53,
	0x8c, 0xe4, 0x55, 0xee, 0xe7, 0x3c, 0x09, 0xef, 0xe0, 0x89, 0xf1, 0x74, 0x95, 0x4c, 0x78, 0x27,
	0x50, 0xfd, 0x38, 0x31, 0xd9, 0xc3, 0x7f, 0xfb, 0x11, 0x1c, 0x96, 0x31, 0x25, 0xde, 0xfe, 0x5d,
	0x81, 0xad, 0xaf, 0x59, 0xa0, 0xc9, 0x15, 0x6c, 0xe7, 0x71, 0x24, 0xcf, 0x83, 0xfb, 0xb9, 0x0e,
	0xe6, 0x02, 0xec, 0xbe, 0x78, 0x18, 0x52, 0x0d, 0x5e, 0x5b, 0x84, 0xc2, 0x6e, 0xd1, 0xad, 0xe4,
	0xd4, 0x74, 0xcf, 0x90, 0x08, 0xd7, 0x5f, 0x0e, 0xea, 0x15, 0x7d, 0x07, 0x7b, 0x6a, 0x6a, 0x62,
	0x9c, 0x6b, 0x3e, 0x17, 0xee, 0xc9, 0x12, 0x4a, 0x2b, 0x33, 0xf8, 0xbf, 0x64, 0x2b, 0x62, 0x1c,
	0xca, 0x64, 0x6d, 0xb7, 0xb9, 0x02, 0xa9, 0xbb, 0xf4, 0x60, 0xaf, 0x6c, 0x3c, 0x62, 0xbc, 0x6c,
	0xf4, 0xb1, 0xfb, 0x72, 0x15, 0x54, 0x37, 0xfa, 0x09, 0x3b, 0x05, 0x7f, 0x92, 0x86, 0xe9, 0xea,
	0x7d, 0xa3, 0xbb, 0xa7, 0x4b, 0x39, 0xad, 0x7f, 0x07, 0x55, 0x83, 0x95, 0x49, 0xb0, 0x60, 0xd9,
	0x0b, 0x12, 0xe1, 0xb6, 0x56, 0xe6, 0x75, 0x5f, 0x0a, 0xbb, 0x45, 0x7b, 0x9b, 0x3d, 0x66, 0xc8,
	0x89, 0xd9, 0x63, 0xa6, 0xa4, 0x9c, 0xf9, 0x3f, 0x1a, 0x19, 0xfa, 0x4a, 0xb1, 0x0c, 0xef, 0x5a,
	0xb3, 0xc7, 0xd6, 0xf4, 0x03, 0xc9, 0x93, 0xeb, 0xeb, 0xca, 0xe4, 0x9b, 0xf7, 0xe6, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5e, 0x3b, 0x93, 0x49, 0x37, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreClient is the client API for Store service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreClient interface {
	Firehose(ctx context.Context, in *FirehoseRequest, opts ...grpc.CallOption) (Store_FirehoseClient, error)
	CreateTicket(ctx context.Context, in *CreateTicketRequest, opts ...grpc.CallOption) (*CreateTicketResponse, error)
	GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error)
	AssignTickets(ctx context.Context, in *AssignTicketsRequest, opts ...grpc.CallOption) (*AssignTicketsResponse, error)
	ReleaseTickets(ctx context.Context, in *ReleaseTicketsRequest, opts ...grpc.CallOption) (*ReleaseTicketsResponse, error)
	MarkPending(ctx context.Context, in *MarkPendingRequest, opts ...grpc.CallOption) (*MarkPendingResponse, error)
	// rpc Freeze(FreezeRequest) returns (FreezeResponse);
	GetCurrentWatermark(ctx context.Context, in *GetCurrentWatermarkRequest, opts ...grpc.CallOption) (*GetCurrentWatermarkResponse, error)
	DeleteTicket(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*DeleteTicketResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) Firehose(ctx context.Context, in *FirehoseRequest, opts ...grpc.CallOption) (Store_FirehoseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Store_serviceDesc.Streams[0], "/openmatch.internal.Store/Firehose", opts...)
	if err != nil {
		return nil, err
	}
	x := &storeFirehoseClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Store_FirehoseClient interface {
	Recv() (*FirehoseResponse, error)
	grpc.ClientStream
}

type storeFirehoseClient struct {
	grpc.ClientStream
}

func (x *storeFirehoseClient) Recv() (*FirehoseResponse, error) {
	m := new(FirehoseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storeClient) CreateTicket(ctx context.Context, in *CreateTicketRequest, opts ...grpc.CallOption) (*CreateTicketResponse, error) {
	out := new(CreateTicketResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/CreateTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error) {
	out := new(GetTicketResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/GetTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) AssignTickets(ctx context.Context, in *AssignTicketsRequest, opts ...grpc.CallOption) (*AssignTicketsResponse, error) {
	out := new(AssignTicketsResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/AssignTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) ReleaseTickets(ctx context.Context, in *ReleaseTicketsRequest, opts ...grpc.CallOption) (*ReleaseTicketsResponse, error) {
	out := new(ReleaseTicketsResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/ReleaseTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) MarkPending(ctx context.Context, in *MarkPendingRequest, opts ...grpc.CallOption) (*MarkPendingResponse, error) {
	out := new(MarkPendingResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/MarkPending", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetCurrentWatermark(ctx context.Context, in *GetCurrentWatermarkRequest, opts ...grpc.CallOption) (*GetCurrentWatermarkResponse, error) {
	out := new(GetCurrentWatermarkResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/GetCurrentWatermark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) DeleteTicket(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*DeleteTicketResponse, error) {
	out := new(DeleteTicketResponse)
	err := c.cc.Invoke(ctx, "/openmatch.internal.Store/DeleteTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServer is the server API for Store service.
type StoreServer interface {
	Firehose(*FirehoseRequest, Store_FirehoseServer) error
	CreateTicket(context.Context, *CreateTicketRequest) (*CreateTicketResponse, error)
	GetTicket(context.Context, *GetTicketRequest) (*GetTicketResponse, error)
	AssignTickets(context.Context, *AssignTicketsRequest) (*AssignTicketsResponse, error)
	ReleaseTickets(context.Context, *ReleaseTicketsRequest) (*ReleaseTicketsResponse, error)
	MarkPending(context.Context, *MarkPendingRequest) (*MarkPendingResponse, error)
	// rpc Freeze(FreezeRequest) returns (FreezeResponse);
	GetCurrentWatermark(context.Context, *GetCurrentWatermarkRequest) (*GetCurrentWatermarkResponse, error)
	DeleteTicket(context.Context, *DeleteTicketRequest) (*DeleteTicketResponse, error)
}

// UnimplementedStoreServer can be embedded to have forward compatible implementations.
type UnimplementedStoreServer struct {
}

func (*UnimplementedStoreServer) Firehose(req *FirehoseRequest, srv Store_FirehoseServer) error {
	return status.Errorf(codes.Unimplemented, "method Firehose not implemented")
}
func (*UnimplementedStoreServer) CreateTicket(ctx context.Context, req *CreateTicketRequest) (*CreateTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTicket not implemented")
}
func (*UnimplementedStoreServer) GetTicket(ctx context.Context, req *GetTicketRequest) (*GetTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTicket not implemented")
}
func (*UnimplementedStoreServer) AssignTickets(ctx context.Context, req *AssignTicketsRequest) (*AssignTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignTickets not implemented")
}
func (*UnimplementedStoreServer) ReleaseTickets(ctx context.Context, req *ReleaseTicketsRequest) (*ReleaseTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseTickets not implemented")
}
func (*UnimplementedStoreServer) MarkPending(ctx context.Context, req *MarkPendingRequest) (*MarkPendingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkPending not implemented")
}
func (*UnimplementedStoreServer) GetCurrentWatermark(ctx context.Context, req *GetCurrentWatermarkRequest) (*GetCurrentWatermarkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentWatermark not implemented")
}
func (*UnimplementedStoreServer) DeleteTicket(ctx context.Context, req *DeleteTicketRequest) (*DeleteTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTicket not implemented")
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_Firehose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FirehoseRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StoreServer).Firehose(m, &storeFirehoseServer{stream})
}

type Store_FirehoseServer interface {
	Send(*FirehoseResponse) error
	grpc.ServerStream
}

type storeFirehoseServer struct {
	grpc.ServerStream
}

func (x *storeFirehoseServer) Send(m *FirehoseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Store_CreateTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).CreateTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/CreateTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).CreateTicket(ctx, req.(*CreateTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/GetTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetTicket(ctx, req.(*GetTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_AssignTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).AssignTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/AssignTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).AssignTickets(ctx, req.(*AssignTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_ReleaseTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).ReleaseTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/ReleaseTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).ReleaseTickets(ctx, req.(*ReleaseTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_MarkPending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkPendingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).MarkPending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/MarkPending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).MarkPending(ctx, req.(*MarkPendingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetCurrentWatermark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentWatermarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetCurrentWatermark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/GetCurrentWatermark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetCurrentWatermark(ctx, req.(*GetCurrentWatermarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_DeleteTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).DeleteTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openmatch.internal.Store/DeleteTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).DeleteTicket(ctx, req.(*DeleteTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openmatch.internal.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTicket",
			Handler:    _Store_CreateTicket_Handler,
		},
		{
			MethodName: "GetTicket",
			Handler:    _Store_GetTicket_Handler,
		},
		{
			MethodName: "AssignTickets",
			Handler:    _Store_AssignTickets_Handler,
		},
		{
			MethodName: "ReleaseTickets",
			Handler:    _Store_ReleaseTickets_Handler,
		},
		{
			MethodName: "MarkPending",
			Handler:    _Store_MarkPending_Handler,
		},
		{
			MethodName: "GetCurrentWatermark",
			Handler:    _Store_GetCurrentWatermark_Handler,
		},
		{
			MethodName: "DeleteTicket",
			Handler:    _Store_DeleteTicket_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Firehose",
			Handler:       _Store_Firehose_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal/api/store.proto",
}
