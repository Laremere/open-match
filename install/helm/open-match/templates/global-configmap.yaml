# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: global-configmap
  namespace: {{ .Release.Namespace }}
  annotations: {{- include "openmatch.chartmeta" . | nindent 4 }}
  labels:
    app: {{ template "openmatch.name" . }}
    component: config
    release: {{ .Release.Name }}
data:
  global_config.yaml: |-
    telemetry:
      zpages:
        enable: "{{ .Values.global.telemetry.zpages.enabled }}"
      jaeger:
        enable: "{{ .Values.global.telemetry.jaeger.enabled }}"
        agentEndpoint: "{{ .Values.global.telemetry.jaeger.agentEndpoint }}"
        collectorEndpoint: "{{ .Values.global.telemetry.jaeger.collectorEndpoint }}"
      prometheus:
        enable: "{{ .Values.global.telemetry.prometheus.enabled }}"
        endpoint: "{{ .Values.global.telemetry.prometheus.endpoint }}"
        serviceDiscovery: "{{ .Values.global.telemetry.prometheus.serviceDiscovery }}"
      stackdriver:
        enable: "{{ .Values.global.telemetry.stackdriver.enabled }}"
        gcpProjectId: "{{ .Values.global.gcpProjectId }}"
        metricPrefix: "{{ .Values.global.telemetry.stackdriver.metricPrefix }}"
      zipkin:
        enable: "{{ .Values.global.telemetry.zipkin.enabled }}"
        endpoint: "{{ .Values.global.telemetry.zipkin.endpoint }}"
        reporterEndpoint: "{{ .Values.global.telemetry.zipkin.reporterEndpoint }}"
      reportingPeriod: "{{ .Values.global.telemetry.reportingPeriod }}"
{{- if .Values.global.tls.enabled }}
    api:
      tls:
        trustedCertificatePath: "{{.Values.global.tls.rootca.mountPath}}/public.cert"
        certificatefile: "{{.Values.global.tls.server.mountPath}}/public.cert"
        privatekey: "{{.Values.global.tls.server.mountPath}}/private.key"
        rootcertificatefile: "{{.Values.global.tls.rootca.mountPath}}/public.cert"
{{- end -}}
